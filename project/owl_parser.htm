<!doctype html><html><head><meta charset="utf-8">
<title>owl_parser v1.2</title></head>
<body>

<h5>owl_parser v1.2, by Kly_Men_COmpany!</h5>

<textarea id="forum" style="width:95%;height:128px;"></textarea><br>
<input type="button" onclick="FORUM();" value="PARSE!">
<div id="result"></div>

<script>
function htmlEntities(str){return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;');}

function owl(text){
var t,r,i,m,a;
t='\n'+text+'\n';
t=t.

replace(/\t|\n/g,'•'). // Табуляторы делаем переносами, чтобы из таблиц Ворда вставлять. Символ «•» далее – перенос.
replace(/\s+/g,' '). // Много пробельных символов = один пробел.
replace(/\s?•\s?/g,'•'). // Убрать пробелы на началах и концах строк.
replace(/•+/g,'•'). // Убрать все пустые строки.
replace(/\s*\[\s*/g,'['). // Убрать пробелы до и после «[».
replace(/\s*\]\s*/g,']'). // Также и с «]», на игровую «&[» вроде не влитяет…
replace(/•\[/g,'•'). // Убрать «[», если она в начале строки.
replace(/([0-9][0-9]+)\s*\]/g,'$1 '). // Если где-то есть не менее двух цифр в цифровом ряду, после которого, возможно через пробел, идёт «]» – то оставить там только цифры и отделить пробелом.
replace(/([0-9][0-9]+)(\s|•)+/g,'$1 '). // Если после цифр есть пробелы или переносы строк подряд – то убрать перенос, и опять же оставить пробел.
replace(/^\s*([0-9][0-9]+\s[^а-яА-ЯёЁ]*?)\s([а-яА-ЯёЁ])/g,'$1\n$2'). // Есть есть строка, в начале которой, (за игнорированием пробелов) стоит не менее двух цифр в цифровом ряду, после которого идут пробелы, а далее – любые символы кроме русских букв,  после которых возникает момент, что через пробельчик появляется русская буква – то заменить этот самый пробельчик на перенос строки.
replace(/•/g,'\n'). // Восстановить настоящие переносы.

replace('','');
r=[];
a=t.split('\n');
a.push('');
for(i=0;i<a.length-1;i++){ // Цикл по всем получившимся строчкам.
m=a[i].replace(/^([0-9][0-9]+) (.*)$/g,'$1\n$2').split('\n'); // Если в начале строки стоят хотя бы две цифры, то после всего этого числа – то разбить это на массив так, что в первый элемент попадёт число, а во второй – всё остальное правее.
if(m.length>1){// Есть разбивка произошла:
i++;
r.push([m[0],m[1],a[i].replace(/^([0-9][0-9]+)\s+/,'')]); // Помещаем результат: число и  изначальную строку – вместе со следующей строчкой результата, но удалив из неё число в начале, если оно есть.
}}
return r; // Выводить «t» или «t.replace(/\n/g,'<br>')» для отладки!
}

function validate(e,r){
var t,k,m,c;
c=String.fromCharCode(1);
m='';
t=e.replace(/[a-zA-Z0-9.,?!@\\:;'&<=>{}[^ -]/g,'');
if(t!='')m+='Странные символы в оригинале: "'+t+'"\n';
r=r.replace(/a/g,'а').replace(/o/g,'о').replace(/e/g,'е').replace(/p/g,'р').replace(/y/g,'у').replace(/c/g,'с').replace(/x/g,'х').replace(/A/g,'А').replace(/B/g,'В').replace(/C/g,'С').replace(/E/g,'Е').replace(/T/g,'Т').replace(/O/g,'О').replace(/P/g,'Р').replace(/H/g,'Н').replace(/K/g,'К').replace(/X/g,'Х').replace(/M/g,'М');
// ^
t=e.replace(/[^^]/g,'');
if(t!=''){
if(e.replace(t,' ').indexOf('^')>=0||!(e+' ').match(new RegExp('[ &[]'+t.replace(/\^/g,'\\^')+' ')))m+='Неверная постановка ^ в оригинале\n';
else{
if(r.replace(t,' ').indexOf('^')>=0||!(r+' ').match(new RegExp('[ &[]'+t.replace(/\^/g,'\\^')+' ')))m+='Несоответствие ^ в переводе\n';
}}else if(r.indexOf('^')>=0)m+='Лишние ^ в переводе\n';
// @
if(e.replace(/@[0-9:;<=!?aAbBgGhHiIJtTuUvV]/g,'').indexOf('@')>=0)m+='Подозрительная @ в оригинале\n';
if(r.replace(/@[0-9:;<=!?aAbBgGhHiIJtTuUvV]/g,'').indexOf('@')>=0)m+='Подозрительная @ в переводе\n';
// [
if(e.match(/[^&]\[/))m+='Подозрительная [ в оригинале\n';
if(r.match(/[^&]\[/))m+='Подозрительная [ в переводе\n';
// &
t=e.replace(/[^[&]/g,'');
k=r.replace(/[^[&]/g,'');
if(t!=k)m+='Варианты "'+k+'" в переводе не соответствуют оригиналу "'+t+'"';
// -
r=r.replace(/[-−–—]+/g,'-');
r=r.replace(/ - /g,' $ ');
if(r.match(/(-\s)|(\s-)/))m+='Дефис с пробелом в переводе\n';
// ...
r=r.replace(/\.\.\./g,'…');
if(r.match(/(…\.)|(\.…)|(……)/))m+='Странное многоточие в переводе\n';
// .
if((r+'&').replace(/[.!?:,]/g,'!').replace(/!+/g,'!').match(/(![^ &])|([ &]!)/))m+='Нет пробела после . , ! ? : в переводе, или есть до\n';
if(r.match(/[.!?]\s+[а-яё]/g))m+='Строчная буква после . ! ? в переводе\n';
t=('  '+r.replace(/[^.,?!]/g,' ').replace(/\s+/g,'  ')+'  ').replace(/\s([.,!?]|(!\?)|(\?\?)|(!!)|(!!!)|(!\.\.)|(\?\.\.)|(\.\.))\s/g,' ').replace(/\s+/g,' ').trim();
if(t!='')m+='Странная пунктуация "'+t+'" в переводе\n';
// LR
t=r.replace(/[^a-zA-KM-QS-Z]/g,'');
if(t!='')m+='Английские буквы "'+t+'" в переводе\n';

r=r.replace(/[$]/g,'–');

return [m,e,r];
}

function FORUM(){
var r,d,i,v,s;

r=owl(document.getElementById('forum').value);

s='';
d='';
d+='<hr><table border="1">';
for(i=0;i<r.length;i++){
v=validate(r[i][1],r[i][2]);
if(v[0]=='')v[0]='OK';
d+='<tr>';
d+='<td>'+htmlEntities(r[i][0])+'</td>';
d+='<td>'+htmlEntities(v[1])+'</td>';
d+='<td>'+htmlEntities(v[2])+'</td>';
d+='<td>'+htmlEntities(v[0]).replace(/\n/g,'<br>')+'</td>';
d+='</tr>';

s+=r[i][0]+'\n'+v[1]+'\n'+v[2]+'\n\n';

}
d+='</table><hr><textarea style="width:95%;height:128px;">'+htmlEntities(s)+'</textarea>';

document.getElementById('result').innerHTML=d;
};
</script>

</body></html>
